SELECT 
SHOP_MONTH,
NEW_STATUS,
REPEAT_STATUS,
REACTIVE_STATUS,
LAG(TOTAL,1) OVER (ORDER BY SHOP_MONTH ASC) as PREVIOUS_TOTAL,
LAG(TOTAL,1) OVER (ORDER BY SHOP_MONTH ASC)-REPEAT_STATUS as NUMBER_CHURN,
REPEAT_STATUS-LAG(TOTAL,1) OVER (ORDER BY SHOP_MONTH ASC) as CHURN_COUNT,
TOTAL
FROM 
    (SELECT SHOP_MONTH,
    COUNT(CASE WHEN STATUS ='NEW' THEN CUST_CODE ELSE NULL END) as NEW_STATUS,
    COUNT(CASE WHEN STATUS ='REPEAT' THEN CUST_CODE ELSE NULL END) as REPEAT_STATUS,
    COUNT(CASE WHEN STATUS ='REACTIVE'THEN CUST_CODE ELSE NULL END) as REACTIVE_STATUS,
    COUNT(STATUS) as TOTAL,
    FROM
        (SELECT PREVIOUS_MONTH,SHOP_MONTH,CUST_CODE,
        CASE WHEN DATE_DIFF(SHOP_MONTH,PREVIOUS_MONTH,MONTH)IS NULL THEN 'NEW'
            WHEN DATE_DIFF(SHOP_MONTH,PREVIOUS_MONTH,MONTH) = 1 THEN 'REPEAT'
            WHEN DATE_DIFF(SHOP_MONTH,PREVIOUS_MONTH,MONTH) > 1 THEN 'REACTIVE'
            ELSE NULL 
        END as STATUS
        FROM
            (SELECT LAG(SHOP_MONTH,1) OVER(PARTITION BY CUST_CODE ORDER BY SHOP_MONTH ASC) AS PREVIOUS_MONTH,SHOP_MONTH,CUST_CODE
            FROM
                (select DISTINCT CUST_CODE,DATE_TRUNC(PARSE_DATE('%Y%m%d', CAST(SHOP_DATE AS STRING)), Month) AS SHOP_MONTH
                FROM `bads7105-churn.1.Supermarket`
                WHERE cust_code IS NOT NULL)
            )
        ) GROUP BY SHOP_MONTH 
    ) 
ORDER BY SHOP_MONTH 
LIMIT 5000
